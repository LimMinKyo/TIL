** 요소 레벨(Element Level) **
태그가 어떻게 보여지는가에 대한 구분

1. 블록 레벨(Block Level)
  - 독립된 행을 갖는 요소 집합
  - 크기 지정, 위치 조정 가능(*)
  - p, h1~h6, ul, ol, li, div, table…
  - 다른 블록 레벨 요소와 인라인 요소 포함 가능
  - p, h, dt, address 같은 일부 요소는 다른 블록 포함 불가

2. 인라인 레벨(inline Level)
  - 범위 표시 요소의 집합
  - 크기(예외:img), 위치 조정 불가
  - a, em, strong, img, span…
  - 블록 레벨 요소는 포함할 수 없고 인라인 요소만 포함 가능
  - 높이 속성 사용 불가

overflow: hidden, scroll, auto, visible(default) 

display: 요소레벨을 바꾸는 속성

*** 레이아웃 ***
각각의 요소들을 필요한 자리에 위치하기

** 레이아웃 기본 구조 **
1. header
  - 상단 로고, GNB, topmenu 등
  - 주로 페이지 안내(이동)에 관한 요소 포함
  - 홈페이지 모든 페이지에 노출
  - GNB : Global Navigation Bar - 메뉴바

2. content(main)
  - 페이지별 내용, LNB, 배너, 게시판 ,퀵메뉴 등
  - 해당 페이지에서 나타내고자 하는 내용 작성
  - LNB : Local Navigation Bar - 사이드 메뉴
    메인메뉴(대메뉴)에 포함된 하위메뉴(소메뉴)의 집합

3. footer
  - 회사나 사이트에 대한 정보
  - 각종 연락처 정보, 관리자 정보, 약관 및 정책, 카피라이트 등

4. 기타 요소(SNS, 검색 ,관련 사이트 등)는 필요한 위치에 추가

*text-align : center
인라인 요소 가운데 정렬

*Box width : 100%
  - width: 100% + padding:100px + border:100px = 100% + 400px

*Box width : auto
  - width + padding + border = 100%

* box-sizing : border-box
  - width + padding + border = width
  - width: 80%; padding: 100px; border: 100px = 80%+400px
  - width: 80%; padding: 100px; border: 100px; box-sizing: border-box = 80%

* float
1. 수직 구조의 요소를 수평 구조로 변경
2. 요소의 레벨이 inline-block 형식으로 변경
3. 수평으로 나열될 모든 요소에 float 속성 적용
4. none / left / right
5. 선택된 요소를 위로 띄우는 속성
6. 위로 이동하면서 생긴 빈 자리에 다른 요소가 이동
7. 자식 요소의 길이합이 부모 요소의 길이보다 길면 부모 요소의 길이를 초과하는 요소들이 아래쪽으로 이동 (태그 작성순)
8. 형제와 부모 관계의 요소들끼리만 적용

* clear
1. float 속성 해제
2. left / right / both

중요) Position: Absolute / Fixed > float > Margin : Auto ( + width, Position : Relative)

패딩은 크기가 바뀌고 마진은 위치가 바뀐다.

* 가변형 레이아웃

가변 1: .clearfix{clear:both}
가변 2: #main:after{content:””; display:block; clear:both;}
가변 3: overflow: hidden
	조건 1. 반드시 자식요소가 float 상태
	조건 2. 부모요소에는 height 사용 안함

** position
1. 움직이는 방법
2. 위치 속성과 함께 사용

* 위치 속성
1. top / right / bottom / left
2. position 속성이 없는 경우 이동 불가
	(값이 static 인 경우 제외)
3. right, bottom은 position 값이
	absolute, fixed, sticky인 경우 사용 가능
4. 기준의 속성명 위치에서 대상의 속성명 위치까지의 거리

** position 속성값

* static
1. 기본값
2. 지정된 요소를 일반 요소(p, h 등)처럼 사용
3. 위치, 레이어 변경 불가
4. 태그가 작성된 순서대로 배치
5. margin: auto 사용 가능

* absolute
1. 위치 독립적 - 다른 요소의 영향 받지 않음
2. 동일안 기준 안에서는 모든 요소가 동일한 기준점 사용
3. margin:auto 사용불가
4. 위치, 레이어 이동 가능

** 레이어
1. 요소들간의 층(앞/뒤)
2. z-index 속성 사용
3. 1부터 시작하는 정수 사용
4. 순서와 무관하며 높은 숫자가 앞
5. 속성을 지정하지 않는 경우 나중에 작성된 요소가 앞
6. 임의로 생성된 값은 실제 값보다 무조건 뒤
7. position 속성과 함께 사용

* relative
1. 요소가 작성된 순서대로 배치
2. 위치, 레이어 변경 가능
3. 모든 요소가 독립된 중심점 사용
4. margin:auto 사용 가능
5. 다른 요소의 영향 있음

** 기준의 정의
1. 움직이는 대상의 position이 relative인 경우
  - 부모요소가 기준

2. 움직이는 대상의 position이 absolute인 경우
  - position 속성은 position 속성을 가지는 상위 요소가 기준
  - 상위 요소 중 position 속성을 가지는 요소가 없는 경우 document가 기준

* fixed
1. 스크린을 기준으로 지정된 위치에 고정
2. 스크롤 시에도 처음 고정된 위치에서 보여지는 속성값
3. margin: auto 사용 불가
4. 레이어 사용 가능

** box-shadow : 지정된 요소의 그림자 설정

* 사용 방법
box-shadow:[dx] [dy] [blur] [spread] [color] [set]

* 속성
1. dx: 그림자의 가로방향 위치
2. dy: 그림자의 세로방향 위치
3. blur: 흐려짐 정도
4. spread: 번짐 정도
5. set: 그림자의 형태
  - outset: 요소 바깥쪽으로 그림자가 떨어짐 (기본값)
  - inset: 요소 안쪽으로 그림자가 떨어짐

** text-overflow
오버플로어 되는 텍스트의 표시를 지정

* 사용 방법
text-overflow: 속성값

* 속성값
1. clip : 지정된 영역의 크기로 잘라낸다..
2. ellipsis: 지정된 영역의 크기에 맞게 말줄임표 표시

* 필요 속성
	white-space: nowrap;
        /* 중요*/
	overflow: hidden;
        /* 중요*/

* background
1. 기존 배경은 한 번에 하나만 적용이 가능하지만
	css3 에서는 여러 개의 배경을 동시에 적용 가능
	* 먼저 작성된 이미지가 위에서 출력

2. 배경의 범위 및 시작 위치 설정 가능

3. 배경의 크기 조정 가능

** background-size
	백그라운드 이미지의 크기 지정

1. 사용방법
	background-size : X, Y;

2. 속성 값
	X%, Y%: 적용되는 요소의 크기에 비례하여 적용
	Xpx, Ypx: 절대크기로 배경 이미지 적용
	cover: 배경 이미지를 늘려 요소 전체에 표시
	contain: 배경 이미지의 가로 세로 비율을 맞춰 요소에 표시할 수 있는 최대 크기로 표시

** 전환효과(transition)
- CSS 속성이 변화할 때 애니메이션
- 2찬원 변환(transform) 함수

1. 사용방법
- transition : 변환속성 애니메이션시간

2. 속성값
- 변환 속성 : 변환할 속성
			all로 지정되면 모든 속성 영향
- 애니메이션시간 : 애니메이션 재생 시간(duration) 지정

3. 변환 함수
- translate(translateX, translateY) : 지정된 값만큼 이동
- scale(scaleX, scaleY) : 지정된 값만큼 확대 및 축소
- skew(angleX, angleY) : 지정된 값만큼 기울림
- rotate(angleZ) : 지정된 값만큼 회전

	ex)

<style>
    #transitionBox img {
      transform:rotate(0deg);
      border:#ccc solid 5px;
      opacity:0.2;
      transition:all 2s;
    }

    #transitionBox img:hover {
      transform:rotate(30deg);
      border:#396 solid 5px;
      opacity:1;
    }
  </style>

** animation
	CSS 의 속성값 변화를 애니메이션

1. keyframes : 효과 작성, 키프레임 지정
- from : 시작 프레임 설정
- to : 끝 프레임 설정
- 중간 키프레임 : %단위로 지정

2. animation : 효과 적용
	animation-name : 설정된 keyframe 지정
	animation-duration : 실행 시간 지정
	animation-iteration-count : 반복 횟수 지정
	animation-timing-function : 속도 형태 지정
	animation-delay : 대기 시간 지정
	animation-direction : 진행 형태 지정